package nsigraph;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

/**
 * To-Do's: -Save a PDF file with all information possible generated from this
 * graph -Add the possibility to save in the PDF 'script runs' with
 * documentation
 *
 * @author Lucas M Carvalhaes
 */
public class GraphFrame extends javax.swing.JFrame {

    //Utils
    ViewGeneratorSelector vselector = new ViewGeneratorSelector(this, true);
    //The graph
    Graph graph;
    GraphControl control;
    ScriptFrame scriptFrame;
    boolean lastWasLoaded = false;

    /**
     * Creates new form GraphFrame
     */
    public GraphFrame() {
        initComponents();
        graph = new Graph();
        control = new GraphControl(graph, new GraphView());
        graphPanel.setGraphController(control);
        scriptFrame = new ScriptFrame();
        this.setLocationRelativeTo(null);
    }

    public void setTool(Tool t) {
        if (graphPanel.getTool() != null) {
            this.graphPanel.getTool().unload(control);
        }
        this.graphPanel.setTool(t);
        this.statusLabel.setText("Tool: " + t.getTitle());
        this.jTable1.setModel(new ProprietiesModel(t.getProprieties()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphPanel = new nsigraph.GraphPanel();
        toolKitIFrame = new javax.swing.JInternalFrame();
        AddNodeBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        btn_remove = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        statusLabel = new javax.swing.JLabel();
        menuPrincipal = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        item_newGraph = new javax.swing.JMenuItem();
        itm_author = new javax.swing.JMenuItem();
        item_saveImageAction = new javax.swing.JMenuItem();
        itm_loadGML = new javax.swing.JMenuItem();
        itm_saveGML = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        itm_vsizefordeg = new javax.swing.JMenuItem();
        itm_genView = new javax.swing.JMenuItem();
        itm_edgeTargets = new javax.swing.JMenuItem();
        itm_clr_script_sel = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        item_getGraphString = new javax.swing.JMenuItem();
        mn_sobre = new javax.swing.JMenu();
        itm_autor = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NSI Graph Viwer");
        setLocationByPlatform(true);
        setName("MainFrame"); // NOI18N

        graphPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        graphPanel.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 271, Short.MAX_VALUE)
        );

        toolKitIFrame.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        toolKitIFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        toolKitIFrame.setTitle("ToolKit");
        toolKitIFrame.setVisible(true);

        AddNodeBtn.setText("Pincel");
        AddNodeBtn.setToolTipText("M1: Cria vértice/aresta M2: Remove vértice");
        AddNodeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrushTool(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Organizar");
        jButton1.setToolTipText("Ferramenta para mover vértices");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArrangeTool(evt);
            }
        });

        btn_remove.setText("Remover");
        btn_remove.setToolTipText("Ferramenta para remover arestas e vértices");
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveTool(evt);
            }
        });

        jButton2.setText("Organizar+");
        jButton2.setToolTipText("Ferramenta para mover vértices com visualização em parentesco");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout toolKitIFrameLayout = new javax.swing.GroupLayout(toolKitIFrame.getContentPane());
        toolKitIFrame.getContentPane().setLayout(toolKitIFrameLayout);
        toolKitIFrameLayout.setHorizontalGroup(
            toolKitIFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolKitIFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(toolKitIFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddNodeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(btn_remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(toolKitIFrameLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        toolKitIFrameLayout.setVerticalGroup(
            toolKitIFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolKitIFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddNodeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(toolKitIFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_remove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jToolBar1.setRollover(true);

        statusLabel.setText("Tool:");
        jToolBar1.add(statusLabel);

        jMenu3.setText("Arquivo");

        item_newGraph.setText("Novo grafo");
        item_newGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_newGraphActionPerformed(evt);
            }
        });
        jMenu3.add(item_newGraph);

        itm_author.setText("Definir autor");
        itm_author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_authorActionPerformed(evt);
            }
        });
        jMenu3.add(itm_author);

        item_saveImageAction.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        item_saveImageAction.setText("Exportar como imagem");
        item_saveImageAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_saveImageActionActionPerformed(evt);
            }
        });
        jMenu3.add(item_saveImageAction);

        itm_loadGML.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        itm_loadGML.setMnemonic('L');
        itm_loadGML.setText("Carrregar GML");
        itm_loadGML.setToolTipText("");
        itm_loadGML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_action_loadgml(evt);
            }
        });
        jMenu3.add(itm_loadGML);

        itm_saveGML.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        itm_saveGML.setMnemonic('S');
        itm_saveGML.setText("Salvar GML");
        itm_saveGML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_saveGMLActionPerformed(evt);
            }
        });
        jMenu3.add(itm_saveGML);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeProgram(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        menuPrincipal.add(jMenu3);

        jMenu4.setText("Visualização");

        jMenuItem2.setText("Tamanho dos vértices");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setVertexSize(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        itm_vsizefordeg.setText("Tamanho dos vértices baseado no grau");
        itm_vsizefordeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_vsizefordegActionPerformed(evt);
            }
        });
        jMenu4.add(itm_vsizefordeg);

        itm_genView.setText("Gerar visualização para o grafo");
        itm_genView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_genViewActionPerformed(evt);
            }
        });
        jMenu4.add(itm_genView);

        itm_edgeTargets.setText("Desenhar arestas direcionais");
        itm_edgeTargets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_edge_targets_toggle(evt);
            }
        });
        jMenu4.add(itm_edgeTargets);

        itm_clr_script_sel.setText("Limpar a seleção script");
        itm_clr_script_sel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_clr_script_selActionPerformed(evt);
            }
        });
        jMenu4.add(itm_clr_script_sel);

        menuPrincipal.add(jMenu4);

        jMenu1.setText("Extra");

        jMenuItem3.setText("Janela de scripts");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_showScriptWindow(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        item_getGraphString.setText("String do objeto grafo");
        item_getGraphString.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_getGraphStringActionPerformed(evt);
            }
        });
        jMenu1.add(item_getGraphString);

        menuPrincipal.add(jMenu1);

        mn_sobre.setText("Sobre");

        itm_autor.setText("Autor");
        itm_autor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_autorActionPerformed(evt);
            }
        });
        mn_sobre.add(itm_autor);

        menuPrincipal.add(mn_sobre);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(toolKitIFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolKitIFrame))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeProgram(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeProgram
        int sair = JOptionPane.showConfirmDialog(null, "Tem certeza que quer sair?");
        if (sair == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_closeProgram

    private void BrushTool(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrushTool
        setTool(new BrushTool(""));
    }//GEN-LAST:event_BrushTool

    private void ArrangeTool(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArrangeTool
        setTool(new ArrangeTool());
    }//GEN-LAST:event_ArrangeTool

    private void setVertexSize(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setVertexSize
        int s = 10;
        try {
            s = Integer.parseInt(JOptionPane.showInputDialog("Type in the new size:"));
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid number format!");
        }
        graphPanel.setVertexSize(s);
    }//GEN-LAST:event_setVertexSize

    private void RemoveTool(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveTool
        setTool(new RemoveTool());
    }//GEN-LAST:event_RemoveTool

    private void itm_showScriptWindow(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_showScriptWindow
        scriptFrame.show(graphPanel.getControl());
    }//GEN-LAST:event_itm_showScriptWindow

    private void itm_edge_targets_toggle(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_edge_targets_toggle
        GEdgeView.drawTargets = !GEdgeView.drawTargets;
    }//GEN-LAST:event_itm_edge_targets_toggle

    private void itm_clr_script_selActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_clr_script_selActionPerformed
        control.clearScriptSelection();
        graphPanel.repaint();
    }//GEN-LAST:event_itm_clr_script_selActionPerformed

    private void itm_action_loadgml(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_action_loadgml
        //Drop in the file chooser
        JFileChooser f = new JFileChooser();
        f.setDialogTitle("Load GML graph");
        f.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (f.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {

            //Prevent concurrency
            graphPanel.setLoadingGraph(true);
            graphPanel.repaint();

            //Select view mode
            vselector.display();

            try {
                //Get the graph
                graph = GMLIO.loadGraphFromGMLFile(f.getSelectedFile(), graphPanel,
                        control, vselector.generator);
                lastWasLoaded = true;
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error loading graph: "
                        + ex.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(GraphFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_itm_action_loadgml

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setTool(new OrganizerTool());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void itm_genViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_genViewActionPerformed
        //Select view mode
        vselector.display();

        //Save old view for speed up GC
        control.setView(GraphControl.generateViewFromGraph(graph, graphPanel, vselector.generator));

        //Repaint the new view
        graphPanel.repaint();
    }//GEN-LAST:event_itm_genViewActionPerformed

    private void itm_vsizefordegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_vsizefordegActionPerformed
        //Update graph degrees
        graph.updateAllVerticesDegrees();
        GVertexView.size_for_degree = !GVertexView.size_for_degree;
        graphPanel.repaint();
    }//GEN-LAST:event_itm_vsizefordegActionPerformed

    private void item_newGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_newGraphActionPerformed
        lastWasLoaded = false;
        control.setGraph(new Graph());
        control.setView(new GraphView());
        graphPanel.repaint();
    }//GEN-LAST:event_item_newGraphActionPerformed

    private void itm_saveGMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_saveGMLActionPerformed
        JFileChooser f = new JFileChooser();
        f.setDialogTitle("Salvar GML");
        f.setFileSelectionMode(JFileChooser.FILES_ONLY);

        if (f.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            if (f.getSelectedFile() != null) {
                File tosave = f.getSelectedFile();

                if (!tosave.getName().endsWith(".gml")) {
                    tosave = new File(tosave.getAbsolutePath() + ".gml");
                }

                try {
                    GMLIO.saveGraph(graph, tosave);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Erro na operação de salvamento.", "Erro!", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(GraphFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_itm_saveGMLActionPerformed

    private void item_saveImageActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_saveImageActionActionPerformed
        JFileChooser f = new JFileChooser();
        f.setDialogTitle("Exportar imagem");
        f.setFileSelectionMode(JFileChooser.FILES_ONLY);

        //Tentaremos então salvar
        if (f.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            if (f.getSelectedFile() != null) {
                File tosave = f.getSelectedFile();

                if (!tosave.getName().endsWith(".png")) {
                    tosave = new File(tosave.getAbsolutePath() + ".png");
                }

                BufferedImage generatedImage = graphPanel.getImage();
                try {
                    ImageIO.write(generatedImage, "png", tosave);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Erro na operação de salvamento.", "Erro!", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(GraphFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_item_saveImageActionActionPerformed

    private void item_getGraphStringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_getGraphStringActionPerformed

        if (graph != null) {
            JFrame stringFrame = new JFrame("Graph string");
            stringFrame.setSize(350, 200);
            stringFrame.setLocationRelativeTo(null);

            JTextArea stringArea = new JTextArea();
            stringArea.setLineWrap(true);
            stringArea.setColumns(50);
            stringArea.setText(graph.toString());

            JScrollPane scroll = new JScrollPane(stringArea);
            stringFrame.add(scroll);

            stringFrame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Não há grafo carregado.", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_item_getGraphStringActionPerformed

    private void itm_authorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_authorActionPerformed
        if(graph != null){
            if(!lastWasLoaded)
                graph.setAuthor(JOptionPane.showInputDialog("Escreva o autor para esse grafo."));
            else
                JOptionPane.showMessageDialog(null, "Só é possivel definir autor para grafos que você criou.");
        }
    }//GEN-LAST:event_itm_authorActionPerformed

    private void itm_autorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_autorActionPerformed
        Sobre s = new Sobre(this, false);
        s.setVisible(true);
    }//GEN-LAST:event_itm_autorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        
        try {
            UIManager.put("nimbusBase", new Color(120,120,180));
            UIManager.put("nimbusBlueGrey", new Color(200,200,200));
            UIManager.put("control", new Color(230,230,230));
            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            // If Nimbus is not available, you can set the GUI to another look and feel.
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddNodeBtn;
    private javax.swing.JButton btn_remove;
    private nsigraph.GraphPanel graphPanel;
    private javax.swing.JMenuItem item_getGraphString;
    private javax.swing.JMenuItem item_newGraph;
    private javax.swing.JMenuItem item_saveImageAction;
    private javax.swing.JMenuItem itm_author;
    private javax.swing.JMenuItem itm_autor;
    private javax.swing.JMenuItem itm_clr_script_sel;
    private javax.swing.JMenuItem itm_edgeTargets;
    private javax.swing.JMenuItem itm_genView;
    private javax.swing.JMenuItem itm_loadGML;
    private javax.swing.JMenuItem itm_saveGML;
    private javax.swing.JMenuItem itm_vsizefordeg;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenu mn_sobre;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JInternalFrame toolKitIFrame;
    // End of variables declaration//GEN-END:variables
}
